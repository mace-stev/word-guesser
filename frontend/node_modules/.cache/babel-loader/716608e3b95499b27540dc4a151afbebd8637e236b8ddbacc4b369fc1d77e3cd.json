{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\OneDrive\\\\Software Engineering\\\\Brainstation\\\\projects\\\\guess-the-word\\\\frontend\\\\src\\\\components\\\\LetterSelector\\\\LetterSelector.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LetterSelector({\n  guess,\n  currentLetter\n}) {\n  const alpha = Array.from(Array(26)).map((e, i) => i + 65);\n  const alphabet = alpha.map(x => String.fromCharCode(x));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: alphabet === null || alphabet === void 0 ? void 0 : alphabet.map((element, index) => {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: `${element}`,\n        name: \"letter\",\n        className: \"letter\",\n        onClick: e => guess(e),\n        value: element\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n}\n_c = LetterSelector;\nexport default LetterSelector;\nvar _c;\n$RefreshReg$(_c, \"LetterSelector\");","map":{"version":3,"names":["LetterSelector","guess","currentLetter","alpha","Array","from","map","e","i","alphabet","x","String","fromCharCode","_jsxDEV","_Fragment","children","element","index","type","id","name","className","onClick","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/willi/OneDrive/Software Engineering/Brainstation/projects/guess-the-word/frontend/src/components/LetterSelector/LetterSelector.js"],"sourcesContent":["function LetterSelector({guess, currentLetter}) {\r\n    const alpha = Array.from(Array(26)).map((e, i) => i + 65);\r\n    const alphabet = alpha.map((x) => String.fromCharCode(x));\r\n    return (<>\r\n        {alphabet?.map((element, index) => {\r\n            return (\r\n                <input type=\"button\" id={`${element}`} name=\"letter\" className=\"letter\" onClick={(e) =>guess(e)} key={index+1} value={element}></input>\r\n              )\r\n        })}</>)\r\n\r\n}\r\nexport default LetterSelector;"],"mappings":";;;AAAA,SAASA,cAAcA,CAAC;EAACC,KAAK;EAAEC;AAAa,CAAC,EAAE;EAC5C,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,EAAE,CAAC;EACzD,MAAMC,QAAQ,GAAGN,KAAK,CAACG,GAAG,CAAEI,CAAC,IAAKC,MAAM,CAACC,YAAY,CAACF,CAAC,CAAC,CAAC;EACzD,oBAAQG,OAAA,CAAAC,SAAA;IAAAC,QAAA,EACHN,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEH,GAAG,CAAC,CAACU,OAAO,EAAEC,KAAK,KAAK;MAC/B,oBACIJ,OAAA;QAAOK,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAG,GAAEH,OAAQ,EAAE;QAACI,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAGf,CAAC,IAAIN,KAAK,CAACM,CAAC,CAAE;QAAegB,KAAK,EAAEP;MAAQ,GAAxBC,KAAK,GAAC,CAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyB,CAAC;IAE/I,CAAC;EAAC,gBAAG,CAAC;AAEd;AAACC,EAAA,GAVQ5B,cAAc;AAWvB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}