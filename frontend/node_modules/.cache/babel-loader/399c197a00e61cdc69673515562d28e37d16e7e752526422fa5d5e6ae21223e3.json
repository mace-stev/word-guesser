{"ast":null,"code":"import{NavLink,useParams,useNavigate}from\"react-router-dom\";import axios from'axios';import{useState,useEffect}from\"react\";import\"./WordDefinitions.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function WordDefinitions(){var _definition$definitio;const navigate=useNavigate();const{word}=useParams();const[definition,setDefinition]=useState();useEffect(()=>{axios.post(\"/words/definition\",{word:word}).then(response=>{setDefinition(response.data);console.log(response.data.meanings);}).catch(error=>{console.log(\"error getting word definition\");});},[word]);return/*#__PURE__*/_jsxs(\"section\",{className:\"word-definitions\",children:[/*#__PURE__*/_jsx(NavLink,{to:\"/\",onClick:()=>navigate(-1),className:\"play-again__element\",children:\"Go Back to Home\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"\".concat(word.toUpperCase())}),/*#__PURE__*/_jsx(\"a\",{href:\"https://www.google.com/search?q=\".concat(word),className:\"backup-link\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"If nothing is rendered, you can continue your search here.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"word-definitions__container\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Noun Meaning:\"}),\" \",\"\".concat((definition===null||definition===void 0?void 0:definition.meanings.noun)||\"\")]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Verb Meaning:\"}),\" \",\"\".concat((definition===null||definition===void 0?void 0:definition.meanings.verb)||\"\")]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Adjective Meaning:\"}),\" \",\"\".concat((definition===null||definition===void 0?void 0:definition.meanings.adjective)||\"\")]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Adverb Meaning:\"}),\" \",\"\".concat((definition===null||definition===void 0?void 0:definition.meanings.adverb)||\"\")]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Example 1:\"}),\" \",\"\".concat((definition===null||definition===void 0?void 0:definition.meanings.examples[0])||\"\")]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Example 2:\"}),\" \",\"\".concat((definition===null||definition===void 0?void 0:definition.meanings.examples[1])||\"\")]})]}),definition===null||definition===void 0?void 0:(_definition$definitio=definition.definitions)===null||_definition$definitio===void 0?void 0:_definition$definitio.map((element,index)=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"word-definitions__container\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Definition:\"}),\" \",\"\".concat((element===null||element===void 0?void 0:element.definition)||\"\")]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Synonym:\"}),\" \",\"\".concat((element===null||element===void 0?void 0:element.synonyms[0])||\"\")]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Antonym:\"}),\" \",\"\".concat((element===null||element===void 0?void 0:element.antonyms[0])||\"\")]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Example:\"}),\" \",\"\".concat((element===null||element===void 0?void 0:element.example)||\"\")]})]},index);})]});}export default WordDefinitions;","map":{"version":3,"names":["NavLink","useParams","useNavigate","axios","useState","useEffect","jsx","_jsx","jsxs","_jsxs","WordDefinitions","_definition$definitio","navigate","word","definition","setDefinition","post","then","response","data","console","log","meanings","catch","error","className","children","to","onClick","concat","toUpperCase","href","target","rel","noun","verb","adjective","adverb","examples","definitions","map","element","index","synonyms","antonyms","example"],"sources":["C:/Users/willi/OneDrive/Software Engineering/Brainstation/projects/guess-the-word/frontend/src/components/WordDefinitions/WordDefinitions.js"],"sourcesContent":["import { NavLink, useParams, useNavigate } from \"react-router-dom\"\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./WordDefinitions.scss\"\r\nfunction WordDefinitions(){\r\n    const navigate= useNavigate()\r\n    const { word } = useParams();\r\n    const [definition, setDefinition]= useState()\r\n    useEffect(()=>{\r\n    axios.post(\"/words/definition\",{word: word}).then((response)=>{\r\n        setDefinition(response.data)\r\n        console.log(response.data.meanings)\r\n    }).catch((error)=>{console.log(\"error getting word definition\")})\r\n},[word])\r\n    return(\r\n    <section className=\"word-definitions\">\r\n    <NavLink to=\"/\" onClick={() => navigate(-1)} className=\"play-again__element\">Go Back to Home</NavLink>\r\n    <h1>{`${word.toUpperCase()}`}</h1>\r\n    <a href={`https://www.google.com/search?q=${word}`} className=\"backup-link\" target=\"_blank\" rel=\"noopener noreferrer\">If nothing is rendered, you can continue your search here.</a>\r\n        <div className=\"word-definitions__container\">\r\n        <p><span>Noun Meaning:</span> {`${definition?.meanings.noun || \"\"}`}</p>\r\n        <p><span>Verb Meaning:</span> {`${definition?.meanings.verb || \"\"}`}</p>\r\n        <p><span>Adjective Meaning:</span> {`${definition?.meanings.adjective || \"\"}`}</p>\r\n        <p><span>Adverb Meaning:</span> {`${definition?.meanings.adverb || \"\"}`}</p>\r\n        <p><span>Example 1:</span> {`${definition?.meanings.examples[0] || \"\"}`}</p>\r\n        <p><span>Example 2:</span> {`${definition?.meanings.examples[1] || \"\"}`}</p>\r\n        </div>\r\n        {definition?.definitions?.map((element, index)=>{\r\n        return(<div key={index} className=\"word-definitions__container\">\r\n        <p><span>Definition:</span> {`${element?.definition || \"\"}`}</p>\r\n        <p><span>Synonym:</span> {`${element?.synonyms[0] || \"\"}`}</p>\r\n        <p><span>Antonym:</span> {`${element?.antonyms[0] || \"\"}`}</p>\r\n        <p><span>Example:</span> {`${element?.example || \"\"}`}</p>\r\n        </div>)\r\n    })}\r\n    \r\n    </section>)\r\n}\r\nexport default WordDefinitions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}